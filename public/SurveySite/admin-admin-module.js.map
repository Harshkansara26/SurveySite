{"version":3,"sources":["./src/app/admin/admin.module.ts","./src/app/admin/auth/auth.component.ts","./src/app/admin/auth/auth.component.html"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACO;AACP;AACF;;;AAE7C,MAAM,OAAO,GAAG,4DAAY,CAAC,QAAQ,CAAC;IACpC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;CAC3C,CAAC,CAAC;AAMI,MAAM,WAAW;;sEAAX,WAAW;0FAAX,WAAW;8FAHb,CAAC,4DAAY,EAAE,0DAAW,EAAE,OAAO,CAAC;mIAGlC,WAAW,mBAFP,kEAAa,aADlB,4DAAY,EAAE,0DAAW,EAAE;;;;;;;;;;;;;ACTvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;;;;;;;ICEtC,0EAC+B;IAC7B,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,+FACF;;ADKD,MAAM,aAAa;IAIxB,YAAoB,MAAc,EAAU,IAAiB;QAAzC,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAElE,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,sDAAI,EAAE,CAAC;IACzB,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,yBAAyB;YACzB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACjD,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC/C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;iBAC5C;YACH,CAAC,CAAC,CAAC;SACJ;aACI;YACH,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC;SACzC;IACH,CAAC;;0EAvBU,aAAa;6FAAb,aAAa;;QCXxB,0EAAwB;QACtB,yEAAiB;QACf,yEAA4E;QAC1E,yGAGM;QACN,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,6EAAwE;QAAhC,qRAAY,qBAAkB,IAAC;QAEvE,8EAA6B;QAC3B,2EAAsB;QAAA,qEAAS;QAAA,4DAAQ;QACvC,4EAGoD;QAFpD,yLAA2B;QAD3B,4DAGoD;QACtD,4DAAW;QAEX,+EAA6B;QAC3B,4EAAsB;QAAA,qEAAS;QAAA,4DAAQ;QACvC,6EAG0C;QAF1C,yLAA2B;QAD3B,4DAG0C;QAC5C,4DAAW;QACX,wEAAM;QAAA,+DAAG;QAAA,4DAAO;QAAA,yEAA0D;QAAA,oEAAQ;QAAA,4DAAI;QACtF,gFAAwC;QACtC,8EAAkD;QAChD,oEAAkC;QAClC,oEACF;QAAA,4DAAS;QACT,8EAAyD;QACvD,oEAA2B;QAC3B,oEACF;QAAA,4DAAS;QACX,4DAAW;QAEb,4DAAO;QACP,4DAAM;QACR,4DAAM;QACR,4DAAO;;QApCE,0DAA0B;QAA1B,0FAA0B;QAS3B,0DAA2B;QAA3B,sFAA2B;QAQ3B,0DAA2B;QAA3B,sFAA2B","file":"admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nconst routing = RouterModule.forChild([\r\n  { path: 'auth', component: AuthComponent }\r\n]);\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, routing],\r\n  declarations: [AuthComponent]\r\n})\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { User } from '../../model/user.model';\r\nimport { AuthService } from '../../model/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\n\r\nexport class AuthComponent implements OnInit {\r\n  public user: User;\r\n  public errorMessage!: string;\r\n\r\n  constructor(private router: Router, private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = new User();\r\n  }\r\n\r\n  authenticate(form: NgForm): void {\r\n    if (form.valid) {\r\n      // perform authentication\r\n      this.auth.authenticate(this.user).subscribe(data => {\r\n        if (data.success) {\r\n          this.auth.storeUserData(data.token, data.user);\r\n          this.router.navigateByUrl('create-survey');\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.errorMessage = 'Form Data Invalid';\r\n    }\r\n  }\r\n}\r\n","\r\n  <main class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3 col-lg-6 offset-lg-3 col-sm-8 offset-sm-1\">\r\n        <div class=\"bg-danger mt-2 p-2 text-center text-white\"\r\n          *ngIf='errorMessage != null'>\r\n          {{ errorMessage }}\r\n        </div>\r\n        <h1>Please Login</h1>\r\n        <form autocomplete='off' #form='ngForm' (ngSubmit)='authenticate(form)'>\r\n  \r\n        <fieldset class=\"form-group\">\r\n          <label for=\"username\">Username:</label>\r\n          <input type=\"text\" class=\"form-control\"\r\n          [(ngModel)]='user.username'\r\n          name='username' placeholder='Enter Username'\r\n          id='username' required autofocus autocomplete='off'>\r\n        </fieldset>\r\n  \r\n        <fieldset class=\"form-group\">\r\n          <label for=\"password\">Password:</label>\r\n          <input type=\"password\" class=\"form-control\"\r\n          [(ngModel)]='user.password'\r\n          name='password' placeholder='Enter Password'\r\n          id='password' required autocomplete='off'>\r\n        </fieldset>\r\n        <span>or </span><a href=\"http://localhost:5000/register\" value=\"Register\">Register</a>\r\n        <fieldset class=\"form-group text-right\">\r\n          <button class='btn btn-primary m-1' type='submit'>\r\n            <i class=\"fas fa-sign-in-alt\"></i>\r\n            Log In\r\n          </button>\r\n          <button class='btn btn-secondary m-1' routerLink='/home'>\r\n            <i class=\"fas fa-undo\"></i>\r\n            Cancel\r\n          </button>\r\n        </fieldset>\r\n  \r\n      </form>\r\n      </div>\r\n    </div>\r\n  </main>\r\n  "],"sourceRoot":"webpack:///"}